package space.enthropy.sem1.lesson6.part2;

// интерфейс - максимальный уровень абстракции в Java. То есть он даже абстрактнее абстрактного класса
// Java <8: в интерфейсе строго ТОЛЬКО НЕ реализованные методы. В абстрактных классах могут быть реализованные
// Начиная с Java >=8 интерфейсы могут содержать реализацию (реализация по умолчанию, default)

// Зачем абстрактные классы и интерфейсы? Если можно выбрать что-то одно и по сути различий нет?
// 1) В интерфейсах не может быть конструкторов. В классах (в т.ч. abstract) могут быть
// 2) Мы можем имплементировать (implements) неограниченное кол-во интерфейсов (65535). От класса можем наследоваться только 1 раз (!!!)
// 3) Поля в интерфейсах всегда public static final
public interface ShapeOfCircleAndSquare {
    public static final int value = 2; // по умолчанию поля помечены static final (final? -> переменная обязана быть проинициализирована в конструкторе, либо сразу И при этом она больше никогда не изменится).

    public double square(int x); // Все методы в интерфейсах по умолчанию public
    default double hiIAmDefault() { // это как обычный метод, но перед ним помечаем его модификатором default
        return 123;
    }





}
